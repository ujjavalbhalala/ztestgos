/**
 * This file was auto-generated by SAP Web IDE build and includes all
 * the source files required by SAPUI5 runtime for performance optimization.
 * PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
 */
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "ztestgos/Component-preload",
	"modules": {
		"ztestgos/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"ztestgos/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"ztestgos.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t}\n\t});\n});",
		"ztestgos/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});",
		"ztestgos/thirdparty/openui5/camera/library.js": "/*!\n * ${copyright}\n */\n\n/**\n * Initialization Code and shared classes of library it.designfuture.qrcode.\n */\nsap.ui.define([\n\t'jquery.sap.global',\n\t'sap/ui/core/library' // library dependency\n],  function(jQuery, library) {\n\n\t\"use strict\";\n\n\t/**\n\t * Suite controls library.\n\t *\n\t * @namespace\n\t * @name openui5.camera\n\t * @author Tiago Almeida <jumpifzero@gmail.com>\n\t * @version ${version}\n\t * @public\n\t */\n\n\t// delegate further initialization of this library to the Core\n\tsap.ui.getCore().initLibrary({\n\t\tname : \"openui5.camera\",\n\t\tnoLibraryCSS: true,\n\t\tversion: \"${version}\",\n\t\tdependencies : [\"sap.ui.core\", \"sap.m\"],\n\t\ttypes: [],\n\t\tinterfaces: [],\n\t\tcontrols: [\n\t\t\t\"openui5.camera.Camera\"\n\t\t],\n\t\telements: []\n\t});\n\n\treturn openui5.camera;\n\n}, /* bExport= */ false);",
		"ztestgos/thirdparty/openui5/camera/Camera.js": "/*\n * A simple UI5 control wrapping the HTML5 media API\n * allowing the library user to easily take Pictures in javascript\n * very easily. The control renders a Video preview element\n * (technically a video html tag). When clicked the image is grabbed\n * as a base64 encoded PNG. In the future would be nice to have the\n * format configurable.\n */\nsap.ui.define([\n    'jquery.sap.global',\n    'sap/ui/core/Control'\n],\n              function(jQuery, Control) {\n                  \"use strict\";\n\n                  /**\n                   * Constructor for a new Camera control.\n                   *\n                   * @param {string} [sId] id for the new control, generated automatically if no id is given\n                   * @param {object} [mSettings] initial settings for the new control\n                   *\n                   * @class\n                   *\n                   * @public\n                   * @alias openui5.camera.Camera\n                   */\n                  var oCamera = Control.extend(\"openui5.camera.Camera\", {\n                      /**\n                       * Control API\n                       */\n                      metadata: {\n                          properties: {\n\n                              /**\n                               * Width of the preview window in pixels\n                               */\n                              \"width\": {\n                                  type: \"string\",\n                                  defaultValue: \"640\"\n                              },\n\n                              /**\n                               * Height of the preview window in pixels\n                               */\n                              \"height\": {\n                                  type: \"string\",\n                                  defaultValue: \"480\"\n                              },\n\n                              /**\n                               * Width of the video capture window in pixels\n                               */\n                              \"videoWidth\": {\n                                  type: \"string\",\n                                  defaultValue: \"1280\"\n                              },\n\n                              /**\n                               * Height of the video capture window in pixels\n                               */\n                              \"videoHeight\": {\n                                  type: \"string\",\n                                  defaultValue: \"960\"\n                              }\n                          },\n                          events: {\n                              /**\n                               * Raised when the user clicks/taps the video preview.\n                               * The event object contain a parameter called \"image\"\n                               * which contains a base64 encoded png file. This is a\n                               * string.\n                               */\n                              \"snapshot\": {}\n                          }\n                      },\n\n                      /**\n                       * Lifecycle hook to initialize the control\n                       */\n                      init: function() {\n                          var that = this;\n                          this._displayingVideo = false; // Is the control displaying video at the moment?\n                      },\n\n\n                      /**\n                       * Handler for when the user clicks the video preview.\n                       * Fires the Snapshot event with the image inside.\n                       **/\n                      _onUserClickedVideo: function() {\n                          var iVideoWidth = parseInt(this.getVideoWidth(), 10);\n                          var iVideoHeight = parseInt(this.getVideoHeight(), 10);\n                          if (this._displayingVideo) {\n                              // Grab the picture from the video element\n                              var oImage = this._takePicture(iVideoWidth, iVideoHeight);\n                              // Send snapshot event with the image inside.\n                              this.fireSnapshot({\n                                  image: oImage\n                              });\n                          }\n                      },\n\n\n                      /**\n                       * Takes a screenshot of the video element and returns its\n                       * data in PNG format.\n                       **/\n                      _takePicture: function(width, height) {\n                          var oCanvas = this._getCanvas();\n                          var oVideo = this._getVideo();\n                          var oImageData = null;\n                          var context = oCanvas.getContext('2d');\n                          if (width && height) {\n                              context.drawImage(oVideo, 0, 0, width, height);\n                              oImageData = oCanvas.toDataURL('image/png');\n                          }\n                          return oImageData;\n                      },\n\n\n                      /**\n                       *\n                       */\n                      _getCanvas: function() {\n                          return jQuery(\"canvas\", jQuery(\"#\" + this.getId())).get(0);\n                      },\n\n\n                      /**\n                       *\n                       */\n                      _getVideo: function() {\n                          return jQuery(\"video\", jQuery(\"#\" + this.getId())).get(0);\n                      },\n\n\n                      /**\n                       *\n                       */\n                      stopCamera: function(){\n                          this._displayingVideo = false;\n                          if (this._stream){\n                              this._stream.getVideoTracks().forEach( function(t){ t.stop(); });\n                          }\n                      },\n\n\n                      /**\n                       *\n                       */\n                      onAfterRendering: function() {\n                          var that = this;\n                          var oVideo = this._getVideo();\n                          // Attach a click handler to the video element\n                          if (oVideo && !oVideo.onclick){\n                              oVideo.onclick = function(){\n                                  that._onUserClickedVideo();\n                              };\n                          }\n                          if (oVideo && !this._displayingVideo) {\n                              // set the camera stream on the canvas.\n                              // Ask the user for camera access.\n                              navigator.mediaDevices.getUserMedia({\n                                  video: { facingMode: \"environment\" }, // Back camera\n                                  audio: false\n                              })\n                                  .then(function(stream) {\n                                      // We have a camera. Let's store the stream for later use\n                                      that._stream = stream;\n                                      oVideo.srcObject = stream;\n                                      oVideo.play();\n                                      that._displayingVideo = true;\n                                  })\n                                  .catch(function(err) {\n                                      jQuery.sap.log.error(\"Problems accessing the camera: \" + err);\n                                  });\n                          }\n                      }\n                  });\n                  return oCamera;\n              });",
		"ztestgos/thirdparty/openui5/camera/library-preload.js": "jQuery.sap.registerPreloadedModules({\n\t\"version\": \"2.0\",\n\t\"name\": \"openui5.camera.library-preload\",\n\t\"modules\": {\n\t\t\"openui5/camera/Camera.js\": \"/*\\n * A simple UI5 control wrapping the HTML5 media API\\n * allowing the library user to easily take Pictures in javascript\\n * very easily. The control renders a Video preview element\\n * (technically a video html tag). When clicked the image is grabbed\\n * as a base64 encoded PNG. In the future would be nice to have the\\n * format configurable.\\n */\\nsap.ui.define([\\n    'jquery.sap.global',\\n    'sap/ui/core/Control'\\n],\\n              function(jQuery, Control) {\\n                  \\\"use strict\\\";\\n\\n                  /**\\n                   * Constructor for a new Camera control.\\n                   *\\n                   * @param {string} [sId] id for the new control, generated automatically if no id is given\\n                   * @param {object} [mSettings] initial settings for the new control\\n                   *\\n                   * @class\\n                   *\\n                   * @public\\n                   * @alias openui5.camera.Camera\\n                   */\\n                  var oCamera = Control.extend(\\\"openui5.camera.Camera\\\", {\\n                      /**\\n                       * Control API\\n                       */\\n                      metadata: {\\n                          properties: {\\n\\n                              /**\\n                               * Width of the preview window in pixels\\n                               */\\n                              \\\"width\\\": {\\n                                  type: \\\"string\\\",\\n                                  defaultValue: \\\"640\\\"\\n                              },\\n\\n                              /**\\n                               * Height of the preview window in pixels\\n                               */\\n                              \\\"height\\\": {\\n                                  type: \\\"string\\\",\\n                                  defaultValue: \\\"480\\\"\\n                              },\\n\\n                              /**\\n                               * Width of the video capture window in pixels\\n                               */\\n                              \\\"videoWidth\\\": {\\n                                  type: \\\"string\\\",\\n                                  defaultValue: \\\"1280\\\"\\n                              },\\n\\n                              /**\\n                               * Height of the video capture window in pixels\\n                               */\\n                              \\\"videoHeight\\\": {\\n                                  type: \\\"string\\\",\\n                                  defaultValue: \\\"960\\\"\\n                              }\\n                          },\\n                          events: {\\n                              /**\\n                               * Raised when the user clicks/taps the video preview.\\n                               * The event object contain a parameter called \\\"image\\\"\\n                               * which contains a base64 encoded png file. This is a\\n                               * string.\\n                               */\\n                              \\\"snapshot\\\": {}\\n                          }\\n                      },\\n\\n                      /**\\n                       * Lifecycle hook to initialize the control\\n                       */\\n                      init: function() {\\n                          var that = this;\\n                          this._displayingVideo = false; // Is the control displaying video at the moment?\\n                      },\\n\\n\\n                      /**\\n                       * Handler for when the user clicks the video preview.\\n                       * Fires the Snapshot event with the image inside.\\n                       **/\\n                      _onUserClickedVideo: function() {\\n                          var iVideoWidth = parseInt(this.getVideoWidth(), 10);\\n                          var iVideoHeight = parseInt(this.getVideoHeight(), 10);\\n                          if (this._displayingVideo) {\\n                              // Grab the picture from the video element\\n                              var oImage = this._takePicture(iVideoWidth, iVideoHeight);\\n                              // Send snapshot event with the image inside.\\n                              this.fireSnapshot({\\n                                  image: oImage\\n                              });\\n                          }\\n                      },\\n\\n\\n                      /**\\n                       * Takes a screenshot of the video element and returns its\\n                       * data in PNG format.\\n                       **/\\n                      _takePicture: function(width, height) {\\n                          var oCanvas = this._getCanvas();\\n                          var oVideo = this._getVideo();\\n                          var oImageData = null;\\n                          var context = oCanvas.getContext('2d');\\n                          if (width && height) {\\n                              context.drawImage(oVideo, 0, 0, width, height);\\n                              oImageData = oCanvas.toDataURL('image/png');\\n                          }\\n                          return oImageData;\\n                      },\\n\\n\\n                      /**\\n                       *\\n                       */\\n                      _getCanvas: function() {\\n                          return jQuery(\\\"canvas\\\", jQuery(\\\"#\\\" + this.getId())).get(0);\\n                      },\\n\\n\\n                      /**\\n                       *\\n                       */\\n                      _getVideo: function() {\\n                          return jQuery(\\\"video\\\", jQuery(\\\"#\\\" + this.getId())).get(0);\\n                      },\\n\\n\\n                      /**\\n                       *\\n                       */\\n                      stopCamera: function(){\\n                          this._displayingVideo = false;\\n                          if (this._stream){\\n                              this._stream.getVideoTracks().forEach( function(t){ t.stop(); });\\n                          }\\n                      },\\n\\n\\n                      /**\\n                       *\\n                       */\\n                      onAfterRendering: function() {\\n                          var that = this;\\n                          var oVideo = this._getVideo();\\n                          // Attach a click handler to the video element\\n                          if (oVideo && !oVideo.onclick){\\n                              oVideo.onclick = function(){\\n                                  that._onUserClickedVideo();\\n                              };\\n                          }\\n                          if (oVideo && !this._displayingVideo) {\\n                              // set the camera stream on the canvas.\\n                              // Ask the user for camera access.\\n                              navigator.mediaDevices.getUserMedia({\\n                                  video: { facingMode: \\\"environment\\\" }, // Back camera\\n                                  audio: false\\n                              })\\n                                  .then(function(stream) {\\n                                      // We have a camera. Let's store the stream for later use\\n                                      that._stream = stream;\\n                                      oVideo.srcObject = stream;\\n                                      oVideo.play();\\n                                      that._displayingVideo = true;\\n                                  })\\n                                  .catch(function(err) {\\n                                      jQuery.sap.log.error(\\\"Problems accessing the camera: \\\" + err);\\n                                  });\\n                          }\\n                      }\\n                  });\\n                  return oCamera;\\n              });\\n\",\n\t\t\"openui5/camera/CameraRenderer.js\": \"sap.ui.define([],\\n\\t          function() {\\n\\t              \\\"use strict\\\";\\n\\n\\t              /**\\n\\t               * @namespace openui5.camera\\n\\t               */\\n\\t              var CameraRenderer = {};\\n\\n\\t              /**\\n\\t               * Renders the HTML for the control, using the provided {@link sap.ui.core.RenderManager}.\\n\\t               *\\n\\t               * @param {sap.ui.core.RenderManager} oRm RenderManager object\\n\\t               * @param {sap.ui.core.Control} oControl An object representation of the control that will be rendered\\n\\t               */\\n\\t              CameraRenderer.render = function(oRm, oControl) {\\n\\t\\t              oRm.write(\\\"<div\\\");\\n\\t\\t              oRm.writeControlData(oControl);\\n\\t\\t              oRm.writeClasses();\\n\\t\\t              oRm.writeStyles();\\n\\t\\t              oRm.write(\\\">\\\");\\n                      oRm.write(\\\"<div style='display: flex; flex-direction: row; align-items: center; justify-content: space-around;'>\\\");\\n                      oRm.write(\\n                          \\\"<video width='%w' height='%h' style='width: %pwpx; height: %phpx;'></video>\\\"\\n                              .replace(\\\"%w\\\", oControl.getVideoWidth())\\n                              .replace(\\\"%h\\\", oControl.getVideoHeight())\\n                              .replace(\\\"%pw\\\", oControl.getWidth())\\n                              .replace(\\\"%ph\\\", oControl.getHeight())\\n                      );\\n                      oRm.write(\\n                          \\\"<canvas width='%w' height='%h' style='display: none; width: %pwpx; height: %phpx;'></canvas>\\\"\\n                              .replace(\\\"%w\\\", oControl.getVideoWidth())\\n                              .replace(\\\"%h\\\", oControl.getVideoHeight())\\n                              .replace(\\\"%pw\\\", oControl.getWidth())\\n                              .replace(\\\"%ph\\\", oControl.getHeight()));\\n\\t\\t              oRm.write(\\\"</div>\\\");\\n\\t\\t              oRm.write(\\\"</div>\\\");\\n\\t              };\\n\\n\\t              return CameraRenderer;\\n\\n              }, /* bExport= */ true);\\n\",\n\t\t\"openui5/camera/library.js\": \"/*!\\n * ${copyright}\\n */\\n\\n/**\\n * Initialization Code and shared classes of library it.designfuture.qrcode.\\n */\\nsap.ui.define([\\n\\t'jquery.sap.global',\\n\\t'sap/ui/core/library' // library dependency\\n],  function(jQuery, library) {\\n\\n\\t\\\"use strict\\\";\\n\\n\\t/**\\n\\t * Suite controls library.\\n\\t *\\n\\t * @namespace\\n\\t * @name openui5.camera\\n\\t * @author Tiago Almeida <jumpifzero@gmail.com>\\n\\t * @version ${version}\\n\\t * @public\\n\\t */\\n\\n\\t// delegate further initialization of this library to the Core\\n\\tsap.ui.getCore().initLibrary({\\n\\t\\tname : \\\"openui5.camera\\\",\\n\\t\\tnoLibraryCSS: true,\\n\\t\\tversion: \\\"${version}\\\",\\n\\t\\tdependencies : [\\\"sap.ui.core\\\", \\\"sap.m\\\"],\\n\\t\\ttypes: [],\\n\\t\\tinterfaces: [],\\n\\t\\tcontrols: [\\n\\t\\t\\t\\\"openui5.camera.Camera\\\"\\n\\t\\t],\\n\\t\\telements: []\\n\\t});\\n\\n\\treturn openui5.camera;\\n\\n}, /* bExport= */ false);\\n\"\n\t}\n});",
		"ztestgos/thirdparty/openui5/camera/CameraRenderer.js": "sap.ui.define([],\n\t          function() {\n\t              \"use strict\";\n\n\t              /**\n\t               * @namespace openui5.camera\n\t               */\n\t              var CameraRenderer = {};\n\n\t              /**\n\t               * Renders the HTML for the control, using the provided {@link sap.ui.core.RenderManager}.\n\t               *\n\t               * @param {sap.ui.core.RenderManager} oRm RenderManager object\n\t               * @param {sap.ui.core.Control} oControl An object representation of the control that will be rendered\n\t               */\n\t              CameraRenderer.render = function(oRm, oControl) {\n\t\t              oRm.write(\"<div\");\n\t\t              oRm.writeControlData(oControl);\n\t\t              oRm.writeClasses();\n\t\t              oRm.writeStyles();\n\t\t              oRm.write(\">\");\n                      oRm.write(\"<div style='display: flex; flex-direction: row; align-items: center; justify-content: space-around;'>\");\n                      oRm.write(\n                          \"<video width='%w' height='%h' style='width: %pwpx; height: %phpx;'></video>\"\n                              .replace(\"%w\", oControl.getVideoWidth())\n                              .replace(\"%h\", oControl.getVideoHeight())\n                              .replace(\"%pw\", oControl.getWidth())\n                              .replace(\"%ph\", oControl.getHeight())\n                      );\n                      oRm.write(\n                          \"<canvas width='%w' height='%h' style='display: none; width: %pwpx; height: %phpx;'></canvas>\"\n                              .replace(\"%w\", oControl.getVideoWidth())\n                              .replace(\"%h\", oControl.getVideoHeight())\n                              .replace(\"%pw\", oControl.getWidth())\n                              .replace(\"%ph\", oControl.getHeight()));\n\t\t              oRm.write(\"</div>\");\n\t\t              oRm.write(\"</div>\");\n\t              };\n\n\t              return CameraRenderer;\n\n              }, /* bExport= */ true);",
		//"ztestgos/view/Picture.view.xml": "<mvc:View xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\"\n\txmlns:lab=\"openui5.camera\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" displayBlock=\"true\" controllerName=\"ztestgos.controller.Picture\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>appTitle}\">\n\t\t\t\t<content>\n\t\t\t\t\t<ObjectHeader title=\"Camera control demo\" backgroundDesign=\"Solid\" number=\"{/photos/length}\" numberUnit=\"photos\"></ObjectHeader>\n\t\t\t\t\t<IconTabBar expanded=\"{device>/isNoPhone}\" class=\"sapUiSmallMarginBottom sapUiResponsiveContentPadding\" select=\"onTabSelect\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Demo\" key=\"demo\">\n\t\t\t\t\t\t\t\t<l:DynamicSideContent class=\"sapUiDSCExplored sapUiContentPadding\" sideContentFallDown=\"BelowM\" containerQuery=\"true\" showSideContent=\"true\">\n\t\t\t\t\t\t\t\t\t<l:mainContent>\n\t\t\t\t\t\t\t\t\t\t<lab:Camera id=\"idCamera\" width=\"800\" height=\"600\" snapshot=\".onSnapshot\" singleShotMode=\"false\"/>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnStartCamera\" text=\"Start Camera\" press=\"startCamera\"/>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnStopCamera\" text=\"Stop Camera\" press=\"stopCamera\"/>\n\t\t\t\t\t\t\t\t\t</l:mainContent>\n\t\t\t\t\t\t\t\t\t<l:sideContent>\n\t\t\t\t\t\t\t\t\t\t<List headerText=\"Photos\" growing=\"false\" items=\"{ path: '/photos' }\" noDataText=\"{i18n>nophotos}\">\n\t\t\t\t\t\t\t\t\t\t\t<CustomListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Image src=\"{src}\" densityAware=\"false\" height=\"100px\"></Image>\n\t\t\t\t\t\t\t\t\t\t\t</CustomListItem>\n\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t</l:sideContent>\n\t\t\t\t\t\t\t\t</l:DynamicSideContent>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"About &amp; Usage\" key=\"info\">\n\t\t\t\t\t\t\t\t<Panel headerText=\"{i18n>title.about}\" width=\"auto\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>about}\"/>\n\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</IconTabBar>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		//"ztestgos/controller/Picture.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(Controller, JSONModel) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"ztestgos.controller.Picture\", {\n\n\t\tonInit: function() {\n\t\t\tthis.getView().setModel(new JSONModel({\n\t\t\t\tphotos: []\n\t\t\t}));\n\t\t},\n\n\t\t/////////////////////////////////////////////\n\t\t//  EVENTS\n\t\t/////////////////////////////////////////////\n\t\tonSnapshot: function(oEvent) {\n\t\t\t// The image is inside oEvent, on the image parameter,\n\t\t\t// let's grab it.\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aPhotos = oModel.getProperty(\"/photos\");\n\t\t\taPhotos.push({\n\t\t\t\tsrc: oEvent.getParameter(\"image\")\n\t\t\t});\n\t\t\toModel.setProperty(\"/photos\", aPhotos);\n\t\t\toModel.refresh(true);\n\t\t},\n\n\t\tonTabSelect: function(oEvent) {\n\t\t\tvar oTab = oEvent.getParameter(\"key\");\n\t\t\tvar oCamera = this.getView().byId(\"idCamera\");\n\t\t\tif (oTab !== \"demo\") {\n\t\t\t\toCamera.stopCamera();\n\t\t\t} else {\n\t\t\t\toCamera.rerender();\n\t\t\t}\n\t\t},\n\n\t\tstartCamera: function() {\n\t\t\tvar oCamera = this.getView().byId(\"idCamera\");\n\t\t\toCamera.rerender();\n\t\t},\n\n\t\tstopCamera: function() {\n\t\t\tvar oCamera = this.getView().byId(\"idCamera\");\n\t\t\toCamera.stopCamera();\n\n\t\t}\n\n\t});\n});"
	}
});